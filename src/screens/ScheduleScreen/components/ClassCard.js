/**
 * This notation was generated by templates.
 * // -------------------------------------------------
 * @description
 * @file ClassCard.js
 * @author: Oskar Yildiz <oskar> 2018-02-23T08:18:10+01:00
 * // -------------------------------------------------
 * Make sure this file is part of its proper namespace
 * and project before moving on.
 * // -------------------------------------------------
 * Code-tags conventionally should be used (See below) :
 * TODO - Something that someone need to do.
 * DOING - Self remind for what you are doing.
 * CONSIDER - Reminder to consider a change or addition.
 * BUG - The below section of a code cause a bug.
 * FIXME - The below section of code need to be fixed.
 * HACK - The below section of code is a workaround.
 * XXX - Any notation important enough to consider implementing.
 * CLARIFY - Very incomprehensible section of code below.
 *
 * Created by Oskar Yildiz <oskar> on 2018-02-23T08:18:10+01:00.
 * Last modified by oskar on 2018-02-23T08:18:10+01:00
 *
 */

import React, { Component } from 'react';
import { LinearGradient } from 'expo';
import { View, Text, TouchableWithoutFeedback } from 'react-native';
import Accordion from 'react-native-collapsible/Accordion';
import Collapsible from 'react-native-collapsible';

class ClassCard extends Component {
  state = {
    title: this.props.cardTitle,
    collapsed: true,
    showExcerpt: true
  };

  _toggleCollapsed() {
    this.setState({
      collapsed: !this.state.collapsed,
      showExcerpt: !this.state.showExcerpt
    });
  }

  render() {
    return (
      <TouchableWithoutFeedback onPress={this._toggleCollapsed.bind(this)}>
        <LinearGradient
          colors={['#3849D0', '#3849D0']}
          style={styles.gradientStyle}
        >
          <View style={styles.greenCircle} />
          <View>
            <Text style={styles.classTime}>{this.props.classTime}</Text>
            <Text style={styles.cardTitle}>{this.props.classTitle}</Text>
            <Text style={styles.cardDescription}>
              {this.props.classDescription}
            </Text>
          </View>
          {/* <View style={styles.cardBodyContainer}>
            <Text style={styles.cardBody}>{this.props.cardBody}</Text>
          </View> */}
        </LinearGradient>
      </TouchableWithoutFeedback>
    );
  }
}

const styles = {
  container: {
    overflow: 'hidden'
  },
  gradientStyle: {
    padding: 20,
    borderRadius: 21,
    marginTop: 15,
    marginRight: 20,
    marginLeft: 20
  },
  cardTitle: {
    backgroundColor: 'transparent',
    color: '#fff',
    fontSize: 20,
    fontWeight: '700',
    paddingTop: 8,
    paddingBottom: 8
  },
  cardDescription: {
    backgroundColor: 'transparent',
    color: '#fff',
    fontSize: 12,
    fontWeight: '700',
    paddingVertical: 2
  },
  classTime: {
    backgroundColor: 'transparent',
    color: '#fff',
    opacity: 0.8
    // fontStyle: 'italic'
  },
  cardExcerpt: {
    backgroundColor: 'transparent',
    color: '#fff',
    opacity: 0.8
  },
  cardBody: {
    backgroundColor: 'transparent',
    color: '#fff',
    paddingTop: 20,
    lineHeight: 25,
    fontSize: 16
  },
  greenCircle: {
    width: 30,
    height: 30,
    backgroundColor: '#00CC99',
    borderRadius: 50,
    alignSelf: 'flex-end',
    position: 'absolute',
    top: -5,
    right: -5
  }
};

export default ClassCard;
